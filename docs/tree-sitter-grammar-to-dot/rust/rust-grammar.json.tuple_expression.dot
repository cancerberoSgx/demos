
  digraph tuple_expression {
  
    rankdir=LR;
  
    s1095 [label="s1095\n&rarr; SEQ", shape=record, fixedsize=false, peripheries=1];
  s1096 [label="s1096 STRING\n\"(\""];
  s1095 -> s1096 [];
  s1097 [label="s1097\n&rarr; SEQ", shape=record, fixedsize=false, peripheries=1];
  s1098 [label="s1098 SYMBOL\n_expression" href="rust-grammar.json._expression.dot.svg"];
  s1097 -> s1098 [];
  s1099 [label="s1099 STRING\n\",\""];
  s1098 -> s1099 [];
  s1096 -> s1097 [];
  s1100 [label="s1100\n&rarr; REPEAT", shape=record, fixedsize=false, peripheries=1];
  s1101 [label="s1101\n&rarr; SEQ", shape=record, fixedsize=false, peripheries=1];
  s1102 [label="s1102 SYMBOL\n_expression" href="rust-grammar.json._expression.dot.svg"];
  s1101 -> s1102 [];
  s1103 [label="s1103 STRING\n\",\""];
  s1102 -> s1103 [];
  s1100 -> s1101 [];
  s1103 -> s1100 [];
  s1099 -> s1100 [];
  s1104 [label="{s1104\n&rarr; CHOICE|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
  s1105 [label="s1105 SYMBOL\n_expression" href="rust-grammar.json._expression.dot.svg"];
  s1104:p0 -> s1105 [label="_expression"];
  s1106 [label="s1106 \nBLANK"];
  s1104:p1 -> s1106 [label=""];
  s1103 -> s1104 [];
  s1107 [label="s1107 STRING\n\")\""];
  s1105 -> s1107 [];
  s1106 -> s1107 [];
  
  }
  