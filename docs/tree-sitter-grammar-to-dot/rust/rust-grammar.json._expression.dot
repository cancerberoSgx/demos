
  digraph _expression {
  
    rankdir=LR;
  
    s919 [label="{s919\n&rarr; CHOICE|{<p0>|<p1>|<p2>|<p3>|<p4>|<p5>|<p6>|<p7>|<p8>|<p9>|<p10>|<p11>|<p12>|<p13>|<p14>|<p15>|<p16>|<p17>|<p18>|<p19>|<p20>|<p21>|<p22>|<p23>|<p24>|<p25>|<p26>|<p27>}}", shape=record, fixedsize=false, peripheries=1];
  s920 [label="s920 SYMBOL\nunary_expression" href="rust-grammar.json.unary_expression.dot.svg"];
  s919:p0 -> s920 [label="unary_expression"];
  s921 [label="s921 SYMBOL\nreference_expression" href="rust-grammar.json.reference_expression.dot.svg"];
  s919:p1 -> s921 [label="reference_expression"];
  s922 [label="s922 SYMBOL\ntry_expression" href="rust-grammar.json.try_expression.dot.svg"];
  s919:p2 -> s922 [label="try_expression"];
  s923 [label="s923 SYMBOL\nbinary_expression" href="rust-grammar.json.binary_expression.dot.svg"];
  s919:p3 -> s923 [label="binary_expression"];
  s924 [label="s924 SYMBOL\nrange_expression" href="rust-grammar.json.range_expression.dot.svg"];
  s919:p4 -> s924 [label="range_expression"];
  s925 [label="s925 SYMBOL\ncall_expression" href="rust-grammar.json.call_expression.dot.svg"];
  s919:p5 -> s925 [label="call_expression"];
  s926 [label="s926 SYMBOL\nreturn_expression" href="rust-grammar.json.return_expression.dot.svg"];
  s919:p6 -> s926 [label="return_expression"];
  s927 [label="s927 SYMBOL\n_literal" href="rust-grammar.json._literal.dot.svg"];
  s919:p7 -> s927 [label="_literal"];
  s928 [label="s928 PREC_LEFT\n(not-implemented)"];
  s919:p8 -> s928 [label=""];
  s929 [label="s929\n&rarr; ALIAS", shape=record, fixedsize=false, peripheries=1];
  s930 [label="{s930\n&rarr; CHOICE|{<p0>|<p1>|<p2>|<p3>|<p4>|<p5>|<p6>|<p7>|<p8>|<p9>|<p10>|<p11>|<p12>|<p13>|<p14>|<p15>|<p16>}}", shape=record, fixedsize=false, peripheries=1];
  s931 [label="s931 STRING\n\"u8\""];
  s930:p0 -> s931 [label="u8"];
  s932 [label="s932 STRING\n\"i8\""];
  s930:p1 -> s932 [label="i8"];
  s933 [label="s933 STRING\n\"u16\""];
  s930:p2 -> s933 [label="u16"];
  s934 [label="s934 STRING\n\"i16\""];
  s930:p3 -> s934 [label="i16"];
  s935 [label="s935 STRING\n\"u32\""];
  s930:p4 -> s935 [label="u32"];
  s936 [label="s936 STRING\n\"i32\""];
  s930:p5 -> s936 [label="i32"];
  s937 [label="s937 STRING\n\"u64\""];
  s930:p6 -> s937 [label="u64"];
  s938 [label="s938 STRING\n\"i64\""];
  s930:p7 -> s938 [label="i64"];
  s939 [label="s939 STRING\n\"u128\""];
  s930:p8 -> s939 [label="u128"];
  s940 [label="s940 STRING\n\"i128\""];
  s930:p9 -> s940 [label="i128"];
  s941 [label="s941 STRING\n\"isize\""];
  s930:p10 -> s941 [label="isize"];
  s942 [label="s942 STRING\n\"usize\""];
  s930:p11 -> s942 [label="usize"];
  s943 [label="s943 STRING\n\"f32\""];
  s930:p12 -> s943 [label="f32"];
  s944 [label="s944 STRING\n\"f64\""];
  s930:p13 -> s944 [label="f64"];
  s945 [label="s945 STRING\n\"bool\""];
  s930:p14 -> s945 [label="bool"];
  s946 [label="s946 STRING\n\"str\""];
  s930:p15 -> s946 [label="str"];
  s947 [label="s947 STRING\n\"char\""];
  s930:p16 -> s947 [label="char"];
  s929 -> s930 [];
  s919:p9 -> s929 [label="identifier"];
  s948 [label="s948 PREC_LEFT\n(not-implemented)"];
  s919:p10 -> s948 [label=""];
  s949 [label="s949 SYMBOL\nself" href="rust-grammar.json.self.dot.svg"];
  s919:p11 -> s949 [label="self"];
  s950 [label="s950 SYMBOL\nscoped_identifier" href="rust-grammar.json.scoped_identifier.dot.svg"];
  s919:p12 -> s950 [label="scoped_identifier"];
  s951 [label="s951 SYMBOL\ngeneric_function" href="rust-grammar.json.generic_function.dot.svg"];
  s919:p13 -> s951 [label="generic_function"];
  s952 [label="s952 SYMBOL\nawait_expression" href="rust-grammar.json.await_expression.dot.svg"];
  s919:p14 -> s952 [label="await_expression"];
  s953 [label="s953 SYMBOL\nfield_expression" href="rust-grammar.json.field_expression.dot.svg"];
  s919:p15 -> s953 [label="field_expression"];
  s954 [label="s954 SYMBOL\narray_expression" href="rust-grammar.json.array_expression.dot.svg"];
  s919:p16 -> s954 [label="array_expression"];
  s955 [label="s955 SYMBOL\ntuple_expression" href="rust-grammar.json.tuple_expression.dot.svg"];
  s919:p17 -> s955 [label="tuple_expression"];
  s956 [label="s956\n&rarr; PREC", shape=record, fixedsize=false, peripheries=1];
  s957 [label="s957 SYMBOL\nmacro_invocation" href="rust-grammar.json.macro_invocation.dot.svg"];
  s956 -> s957 [];
  s919:p18 -> s956 [label="1"];
  s958 [label="s958 SYMBOL\nunit_expression" href="rust-grammar.json.unit_expression.dot.svg"];
  s919:p19 -> s958 [label="unit_expression"];
  s959 [label="s959 SYMBOL\n_expression_ending_with_block" href="rust-grammar.json._expression_ending_with_block.dot.svg"];
  s919:p20 -> s959 [label="_expression_ending_with_block"];
  s960 [label="s960 SYMBOL\nbreak_expression" href="rust-grammar.json.break_expression.dot.svg"];
  s919:p21 -> s960 [label="break_expression"];
  s961 [label="s961 SYMBOL\ncontinue_expression" href="rust-grammar.json.continue_expression.dot.svg"];
  s919:p22 -> s961 [label="continue_expression"];
  s962 [label="s962 SYMBOL\nindex_expression" href="rust-grammar.json.index_expression.dot.svg"];
  s919:p23 -> s962 [label="index_expression"];
  s963 [label="s963 SYMBOL\nmetavariable" href="rust-grammar.json.metavariable.dot.svg"];
  s919:p24 -> s963 [label="metavariable"];
  s964 [label="s964 SYMBOL\nclosure_expression" href="rust-grammar.json.closure_expression.dot.svg"];
  s919:p25 -> s964 [label="closure_expression"];
  s965 [label="s965 SYMBOL\nparenthesized_expression" href="rust-grammar.json.parenthesized_expression.dot.svg"];
  s919:p26 -> s965 [label="parenthesized_expression"];
  s966 [label="s966 SYMBOL\nstruct_expression" href="rust-grammar.json.struct_expression.dot.svg"];
  s919:p27 -> s966 [label="struct_expression"];
  
  }
  