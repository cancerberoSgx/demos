
  digraph _expression_ending_with_block {
  
    rankdir=LR;
  
    s967 [label="{s967\n&rarr; CHOICE|{<p0>|<p1>|<p2>|<p3>|<p4>|<p5>|<p6>|<p7>|<p8>}}", shape=record, fixedsize=false, peripheries=1];
  s968 [label="s968 SYMBOL\nunsafe_block" href="rust-grammar.json.unsafe_block.dot.svg"];
  s967:p0 -> s968 [label="unsafe_block"];
  s969 [label="s969 SYMBOL\nblock" href="rust-grammar.json.block.dot.svg"];
  s967:p1 -> s969 [label="block"];
  s970 [label="s970 SYMBOL\nif_expression" href="rust-grammar.json.if_expression.dot.svg"];
  s967:p2 -> s970 [label="if_expression"];
  s971 [label="s971 SYMBOL\nif_let_expression" href="rust-grammar.json.if_let_expression.dot.svg"];
  s967:p3 -> s971 [label="if_let_expression"];
  s972 [label="s972 SYMBOL\nmatch_expression" href="rust-grammar.json.match_expression.dot.svg"];
  s967:p4 -> s972 [label="match_expression"];
  s973 [label="s973 SYMBOL\nwhile_expression" href="rust-grammar.json.while_expression.dot.svg"];
  s967:p5 -> s973 [label="while_expression"];
  s974 [label="s974 SYMBOL\nwhile_let_expression" href="rust-grammar.json.while_let_expression.dot.svg"];
  s967:p6 -> s974 [label="while_let_expression"];
  s975 [label="s975 SYMBOL\nloop_expression" href="rust-grammar.json.loop_expression.dot.svg"];
  s967:p7 -> s975 [label="loop_expression"];
  s976 [label="s976 SYMBOL\nfor_expression" href="rust-grammar.json.for_expression.dot.svg"];
  s967:p8 -> s976 [label="for_expression"];
  
  }
  